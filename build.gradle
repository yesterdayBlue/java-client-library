apply plugin: 'java'

sourceCompatibility = "1.6"
targetCompatibility = "1.6"

repositories {
    mavenCentral()
}

dependencies {
    compile "commons-codec:commons-codec:1.9"
    compile "commons-lang:commons-lang:2.6"
    compile "commons-logging:commons-logging:1.2"
    compile "org.apache.httpcomponents:httpcore:4.4.4"
    compile "org.apache.httpcomponents:httpmime:4.5.2"
    compile "org.apache.httpcomponents:httpclient:4.5.2"
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.3'
    compile 'log4j:log4j:1.2.17'
}

jar {
    baseName = 'jDeployR'
    version = '8.0.6'
}

javadoc {
    title = "DeployR Java Client Library"
    options.overview = "src/main/java/overview.html"
    exclude "com/revo/deployr/client/core/**/*.java"
    exclude "com/revo/deployr/client/call/**/*.java"
    exclude "com/revo/deployr/client/data/impl/**/*.java"
    exclude "com/revo/deployr/client/managers/impl/**/*.java"
    exclude "com/revo/deployr/client/auth/impl/**/*.java"
    exclude "com/revo/deployr/client/response/impl/**/*.java"
    exclude "com/revo/deployr/client/util/**/*.java"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
gradle.projectsEvaluated {
    gradle ->
        println "项目数量："+ gradle.getRootProject().getAllprojects().size()
        def projects = gradle.getRootProject().getAllprojects()
        projects.each {Project project ->
            println "项目名称："+project.name
            project.getDependencies().findAll().each {
                Object object ->
                    println object
            }
            def names = project.configurations.getNames()
            names.each {String name ->
                def configuration = project.configurations.getByName(name)
                println configuration.getName()
                configuration.each { File file ->
                    println project.name+"依赖jar包路径："+(file.getCanonicalPath())
                    copy {
                        from file
                        into "lib"
                        rename { String fileName ->
                            //防止文件重名
                            fileName = file.getParentFile().getName()+"_"+fileName
                        }
                    }
                }
            }
        }
        println "所有的project输出jar包完毕"
}
